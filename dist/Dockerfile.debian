ARG VERSION_ID
FROM debian:${VERSION_ID}

RUN apt-get update && apt-get install -y --no-install-recommends \
        wget \
        ca-certificates \
        git \
        build-essential \
        dh-make \
        fakeroot \
        devscripts \
        libjson-c-dev \
        lsb-release
# runc dependencies
RUN echo "deb http://ftp.debian.org/debian $(lsb_release -cs)-backports main" > /etc/apt/sources.list.d/backports.list
RUN apt-get update && apt-get install -t "$(lsb_release -cs)-backports" -y \
        libseccomp-dev && \
    apt-get install -y \
        pkg-config \
        libapparmor-dev \
        libselinux1-dev && \
    rm -rf /var/lib/apt/lists/*

ARG GOLANG_VERSION=0.0.0
RUN set -eux; \
    \
    arch="$(uname -m)"; \
    case "${arch##*-}" in \
        x86_64 | amd64) ARCH='amd64' ;; \
        ppc64el | ppc64le) ARCH='ppc64le' ;; \
        *) echo "unsupported architecture" ; exit 1 ;; \
    esac; \
    wget -nv -O - https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-${ARCH}.tar.gz \
    | tar -C /usr/local -xz

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

# packaging
ARG PKG_VERS
ARG PKG_REV

ENV DEBFULLNAME "B-COM"
ENV DEBEMAIL "acceleration@b-com.com"
ENV REVISION "$PKG_VERS-$PKG_REV"
ENV SECTION ""

# output directory
ENV DIST_DIR=/tmp/accelerator-container-runtime-$PKG_VERS
RUN mkdir -p $DIST_DIR

#--------------
# runtime-tool
#--------------

COPY runtime-tool /tmp/runtime-tool

RUN git clone https://github.com/aws/aws-fpga /tmp/aws-fpga

RUN cd /tmp/runtime-tool && \
    make CFLAGS="-I/tmp/aws-fpga/sdk/userspace/include" accelerator-container-runtime-tool && \
    mv accelerator-container-runtime-tool $DIST_DIR/accelerator-container-runtime-tool

#--------------
# runtime-hook
#--------------

COPY runtime-hook/ $GOPATH/src/accelerator-container-runtime-hook

RUN go get -ldflags "-s -w" -v accelerator-container-runtime-hook && \
    mv $GOPATH/bin/accelerator-container-runtime-hook $DIST_DIR/accelerator-container-runtime-hook

COPY conf/*.json $DIST_DIR/

WORKDIR $DIST_DIR/..

#--------------
# patched runc
#--------------

RUN go get github.com/LK4D4/vndr

WORKDIR $GOPATH/src/github.com/opencontainers/runc

RUN git clone https://github.com/docker/runc.git . && \
    git fetch https://github.com/opencontainers/runc.git

ARG RUNC_COMMIT
COPY runtime-patch/runc/$RUNC_COMMIT/ /tmp/patches/runc

RUN git checkout $RUNC_COMMIT && \
    git apply /tmp/patches/runc/* && \
    if [ -f vendor.conf ]; then vndr; fi && \
    make BUILDTAGS="seccomp apparmor selinux" && \
    mv runc $DIST_DIR/accelerator-container-runtime

#--------------
# deb build
#--------------

WORKDIR $DIST_DIR
COPY dist/deb ./debian

RUN sed -i "s;@VERSION@;${REVISION#*+};" debian/changelog && \
    if [ "$REVISION" != "$(dpkg-parsechangelog --show-field=Version)" ]; then exit 1; fi

CMD export DISTRIB="$(lsb_release -cs)" && \
    debuild -eREVISION -eDISTRIB -eSECTION --dpkg-buildpackage-hook='sh debian/prepare' -i -us -uc -b && \
    mv /tmp/*.deb /dist
